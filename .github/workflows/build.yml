name: Build
on: [push, pull_request]

jobs:
  build-win-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          cd VisualPinball.Engine.Mpf
          dotnet build -c Release -r win-x64
#     - name: Test
#       run: |
#         cd VisualPinball.Engine.Mpf.Test
#         dotnet run -c Release -r win-x64
      - run: |
          mkdir tmp
          xcopy /E /I VisualPinball.Engine.Mpf.Unity\Plugins\win-x64 tmp\win-x64
      - uses: actions/upload-artifact@v2
        with:
          name: Plugins
          path: tmp

  build-win-x86:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          cd VisualPinball.Engine.Mpf
          dotnet build -c Release -r win-x86
#     - name: Test
#       run: |
#         cd VisualPinball.Engine.Mpf.Test
#         dotnet run -c Release -r win-x86
      - run: |
          mkdir tmp
          xcopy /E /I VisualPinball.Engine.Mpf.Unity\Plugins\win-x86 tmp\win-x86
      - uses: actions/upload-artifact@v2
        with:
          name: Plugins
          path: tmp

  build-osx-x64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          cd VisualPinball.Engine.Mpf
          dotnet build -c Release -r osx-x64
#     - name: Test
#       run: |
#         cd VisualPinball.Engine.Mpf.Test
#         dotnet run -c Release -r osx-x64
      - run: |
          mkdir tmp
          cp -r VisualPinball.Engine.Mpf.Unity/Plugins/osx-x64 tmp
      - uses: actions/upload-artifact@v2
        with:
          name: Plugins
          path: tmp

  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          cd VisualPinball.Engine.Mpf
          dotnet build -c Release -r linux-x64
#     - name: Test
#       run: |
#         cd VisualPinball.Engine.Mpf.Test
#         dotnet run -c Release -r linux-x64
      - run: |
          mkdir tmp
          cp -r VisualPinball.Engine.Mpf.Unity/Plugins/linux-x64 tmp
      - uses: actions/upload-artifact@v2
        with:
          name: Plugins
          path: tmp

  dispatch:
    runs-on: ubuntu-latest
    needs: [ build-win-x64, build-win-x86, build-osx-x64, build-linux-x64 ]
    if: github.repository == 'VisualPinball/VisualPinball.Engine.Mpf' && github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_PAT }}
          event-type: build-complete
          client-payload: '{"artifacts_run_id": "${{ github.run_id }}"}'
