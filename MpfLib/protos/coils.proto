syntax = "proto3";

package Mpf;

// Pulse a coil
// If it has been enabled before disable it afterwards
message PulseCoilRequest {
    string coil_number = 1;
    uint32 pulse_ms = 2;
    float pulse_power = 3;
}

// Enable a coil
// Not sure if hold_power is simulated in VPE or if we should remove it
message EnableCoilRequest {
    string coil_number = 1;
    uint32 pulse_ms = 2;
    float pulse_power = 3;
    float hold_power = 4;   // Probably not important for VPE. Can a ball be knocked off from a magnet?
}

// Disable a coil
message DisableCoilRequest {
    string coil_number = 1;
}

// Configure a minimal hardware rule to hide latency from pops/slings/flippers
// Dual-wound, EOS, cut-off rules and more are ignored here
// Not sure if hold_power is simulated in VPE or if we should remove it
message ConfigureHardwareRuleRequest {
    string coil_number = 1;
    string switch_number = 2;
    uint32 pulse_ms = 3;
    float pulse_power = 4;
    float hold_power = 5;   // Probably not important for VPE because knocking down a flipper will probably not happen there
}

message CoilResponse {
}

// Remove a rule between switch and coil
message RemoveHardwareRuleRequest {
    string coil_number = 1;
    string switch_number = 2;
}
